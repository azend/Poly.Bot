class WebMod {
	function WebMod(Bot) {
		Log.Info("Init WebMod!");
		Web = this;
		this.Bot = Bot;
		this.Server = Poly.Net.Http.Server();

		Log.Info("Attempting to listen on 1653!");

		this.Server.On("/*", (Web) => {
			Web.Handle(Request, FileName);
		});

		Public = this.CreateHost("*\.scoizzle\.com", {
			Ports: [ 1653 ]
		});

		Local = this.CreateHost("localhost", {
			Ports: [ 1653 ]
		});

		Log.Info("Attempting to Start!");
		this.Server.Start();
	}

	function CreateHost(Name, Config) {
		Host = Poly.Net.Http.Host(Config);
		Host.Name = Name;

		this.Server.Host(Name, Host);

		return Host;
	}

	function Handle(Request, Path) {
		switch (Path) {
			case ~"/Message/{Who:uridescape}/{Message:uridescape}/":
				this.Bot.SendMessage(Who, Message);
				Request.Print("Ok");
			break;

			case ~"/Notice/{Who:uridescape}/{Message:uridescape}/":
				this.Bot.SendNotice(Who, Message);
				Request.Print("Ok");
			break;

			case ~"/List/{Item:uridescape}/|{Filter:uridescape}/":
				if (Filter) {
					if (this.Bot.[Item].[Filter]) {
						Request.Print(this.Bot.[Item].[Filter].ToString(true));
					}
					else {
						Request.Result.Status = "404 Not Found";
					}
				}
				else if (this.Bot.[Item]) {
					Request.Print(this.Bot.[Item].ToString(true));
				}
				else {
					Request.Result.Status = "404 Not Found";
				}
			break;

			default:
				Request.Result.Status = "404 Not Found";
			break;
		}
	}
}